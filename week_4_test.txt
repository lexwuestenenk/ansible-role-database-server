1. 
A: Dit playbook zet een webserver op gebaseerd op apache2 / httpd (gebaseerd op ubuntu / redhat) en geeft hier vervolgens een default configuratie met custom error pages, virtual host bestanden, firewall configuratie en ip restricties
B: Webservers
C: Het playbook gebruikt become:true, wat betekent dat het de root (sudo) gebruiker wordt.

2.
A:
server_name
document_root
webserver_port
enable_ssl
ssl_port
enable_custom_error_pages
allowed_ips

debian_packages
redhat_packages
a
B: Deze variabelen worden later op de webpagina op de servers getoond
C: Het gebruik van variabelen voorkomt herhalingen en zorgt ervoor dat alle plekken waar deze variabele wordt gebruikt in een keer aangepast kunnen worden, in plaats van dit overal handmatig te moeten doen.

3:
A.
Regel 74 - 80: worden alleen uitgevoerd als de os-family Debian is
Regel 83 - 88: worden alleen uitgevoerd als de os-family RedHat is
Regel 95: shorthand if statement die gebaseerd op de os-family 'www-data' (debian) en bij alle andere apache gebruikt als owner van het bestand
Regel 96: shorthand if statement die gebaseerd op de os-family 'www-data' (debian) en bij alle andere apache gebruikt als group van het bestand
Regel 103: zelfde als regel 95
Regel 104: zelfde als regel 96
Regel 114: zelfde als regel 95
Regel 115: zelfde als regel 96
Regel 121: custom error pages worden alleen aangemaakt als de enable_custom_error_pages bool gelijk is aan 'True'
Regel 123 - 128: word uitgevoerd als de os-family gelijk is aan Debian
Regel 130 - 133: word uitgevoerd als de os-family gelijk is aan Debian
Regel 135 - 140: word uitgevoerd als de os-family gelijk is aan RedHat
Regel 142 - 148: word uitgevoerd als de os-family gelijk is aan RedHat
Regel 150 - 158: word uitgevoerd als de os-family gelijk is aan RedHat
Regel 168 - 174: word uitgevoerd als de os-family gelijk is aan RedHat
Regel 175 - 179: word uitgevoerd als de os-family gelijk is aan RedHat
Regel 181 - 185: word uitgevoerd als de os-family gelijk is aan RedHat
B: De taken worden conditioneel uitgevoerd omdat de playbook voor 2 OS'en, RedHat & Debian gebruikt wordt. Deze hebben andere package manangers en moeten dit dus op andere manieren installeren. Ook hebben packages vaak andere namen.
C: Ansible haalt met gebruik van gather_facts informatie over het besturingsysteem op. Hierin staat een variable genaamd 'os_family' waarin staat welke os (type) er gebruikt word.

4.
A: 
restart apache debian
restart apache redhat
reload firewall
B:
Regel 107: Apache op Debian restarten na het aanmaken van de index.html pagina
Regel 108: Apache op RedHat restarten na het aanmaken van de index.html pagina 
Regel 128: Apache op Debian restarten na het aanmaken van de virtual hosts
Regel 133: Apache op Debian restarten na het activeren van de site
Regel 140: Apache op RedHat restarten na het aanmaken van de virtual hosts
Regel 148: Firewall op RedHat reloaden na het configureren voor HTTP
Regel 158: Firewall op RedHat reloaden na het configureren voor HTTPS
Regel 165: Apache op Debian reloaden na het configureren van de ip restricties
Regel 166: Apache op RedHat reloaden na het configureren van de ip restricties
C:
Handlers zijn taken die vaker worden uitgevoerd. Deze elke keer herhalen maakt de playbooks langer waardoor de leesbaarheid omlaag gaat. Ook is het makkelijk om dit te configureren op een centraal punt indien aanpassingen nodig zijn.

5.
A:
Regel 87: missende dubbele punt na when.                                        -> Syntaxfout
Regel 97: missende '' om het mode nummer ('0755')                               -> Syntaxfout
Regel 131: commando module word niet goed aangeroepen bij a2ensite              -> Structuurfout
Regel 178: missende dubbele punt na state.                                      -> Syntaxfout
Regel 187: willekeurige call naar restart apache2                               -> Syntaxfout
Regel 117: indentation van het loop keyword is niet goed                        -> Syntaxfout
Regel 155 - 157: bij meerdere when conditions moeten streepjes gebruikt worden  -> Syntaxfout
